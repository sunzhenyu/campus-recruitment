(function (a, b, c) { var d = function (e) { this.config = { width: "", height: "auto", zIndex: 10, content: '<div class="ui-layer-loading">Loading..</div>', title: "", button: null, ok: null, cancel: null, className: "zyb-Layer", cssUri: "", isMask: true, tplHtml: '<div class="ui-layer">' + '<div class="ui-layer-container" data-role="container">' + '<div class="ui-layer-header" data-role="header">' + '<div class="ui-layer-title" data-role="title"></div>' + '<button class="ui-layer-close" data-role="close">×</button>' + "</div>" + '<div class="ui-layer-content" data-role="content">' + "</div>" + '<div class="ui-layer-footer" data-role="footer">' + '<div class="ui-layer-button" data-role="button"></div>' + "</div>" + "</div>" + "</div>", callBack: null }; this.options = b.extend({}, this.config, e); this.destroyed = false; this.create(); this._header = this.wrap.find("[data-role=header]"); this._title = this.wrap.find("[data-role=title]").html(this.options.title); this._container = this.wrap.find("[data-role=container]").css({ width: this.options.width, height: this.options.height }); this._content = this.wrap.find("[data-role=content]"); this._button = this.wrap.find("[data-role=button]"); this._close = this.wrap.find("[data-role=close]"); this.setContent(this.options.content); this.button(); this.bindEvent() }; d.prototype = { constructor: d, destroyed: true, create: function () { var e = this; this.wrap = !this.wrap ? b("<div />").attr({ tabindex: "-1" }).css({ display: "none", position: "absolute", left: 0, top: 0, bottom: "auto", right: "auto", margin: 0, padding: 0, outline: 0, border: "0 none", background: "transparent" }).html(e.options.tplHtml).appendTo(b("body")) : this.wrap; this.wrap.css({ zIndex: this.options.zIndex }); this.mask = this.createMask() }, createMask: function () { return !this.mask ? b('<div class="mask"></div>').css({ position: "fixed", top: 0, left: 0, width: "100%", height: "100%", overflow: "hidden", backgroundColor: "#000", opacity: 0.5, zIndex: this.options.zIndex - 1, display: "none" }) : this.mask }, setContent: function (e) { if (typeof e === "object") { this._content.empty().append(b(e)) } else { this._content.html(e) } this.callBack(); return this }, bindEvent: function () { var e = this; b(a).resize(function () { e.center() }); b(document).on("keydown", function (i) { var h = event.target; var j = h.nodeName; var f = /^input|textarea$/i; var g = event.keyCode; if (f.test(j) && h.type !== "button") { return } if (g === 27) { e.remove() } }); this._close.on("click", function () { e.remove() }) }, button: function () { var f = this; var e = this.options.button || []; b.each(e, function (g, h) { b('<button data-id="' + h.id + '" class="' + h.btnclass + '"></button>').text(h.value).appendTo(f._button).click(function () { if (h.id == "ok" && typeof f.options.ok === "function") { f.options.ok.call(f) } else { if (h.id == "cancel") { if (typeof f.options.cancel === "function") { f.options.cancel.call(f) } f.remove() } } }) }) }, move: function (h) { var g = this, f = g.option, e = {}; h && h.attr("move", "ok"); h ? h.css({ cursor: "move" }) : h.css({ cursor: "auto" }); h.on("mousedown", function (i) { var i = i || a.event; i.preventDefault(); if (b(this).attr("move") === "ok") { e.ismove = true; e.wrap = g.wrap; e.moveX = i.pageX - e.wrap.offset().left; e.moveY = i.pageY - e.wrap.offset().top } }); b(document).mousemove(function (n) { var n = n || a.event; n.preventDefault(); var k = n.pageX; var j = n.pageY; var i = 0; var o = 0; if (e.ismove) { i = k - e.moveX; o = j - e.moveY - b(a).scrollTop(); var m = b(a).width() - e.wrap.width(), l = b(a).height() - e.wrap.height(); i = Math.min(m, Math.max(0, i)); o = Math.min(l, Math.max(0, o)); e.wrap.css({ left: i, top: o }) } }).mouseup(function () { e.ismove = false }) }, show: function () { if (this.destroyed) { return this } if (this.options.isMask) { this.mask.insertBefore(this.wrap) } this.center(); this.wrap.addClass(this.options.className).addClass(this.options.className + "-show").show(); this.mask.show(); return this }, callBack: function (e) { typeof e === "function" && e.call(this.wrap, arguments); return this }, remove: function () { if (this.destroyed) { return this } this.wrap.remove(); this.mask.remove(); b(a).off("resize"); b(document).off("keydown"); for (var e in this) { delete this[e] } return this }, close: function () { if (!this.destroyed) { this.mask.hide(); this.wrap.hide() } }, center: function (l) { var e = this.wrap; var f = b(a); var i = b(document); var j = this.fixed; var k = j ? 0 : i.scrollLeft(); var g = j ? 0 : i.scrollTop(); var h = (f.width() - e.width()) / 2 + k; var m = (f.height() - e.height()) / 2 + g; e.css({ left: Math.max(parseInt(h), k), top: Math.max(parseInt(m), g) }); return this }, setTitle: function (e) { e && this._title.empty().append(b(e)); return this }, animate: function () { this.wrap.css("transition", "all .15s ease-in-out") } }; a.Layer = d })(window, $);