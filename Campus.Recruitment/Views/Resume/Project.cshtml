@using Campus.Recruitment.Helper
@model Campus.Recruitment.Entities.Entity.Customers.CustomerProject

<div class="form-holder">
    <div class="resume-form">
        <form action="/resume/submitrecord/" id="form-project" method="post">
            <input data-val="true"  id="Id" name="Id" type="hidden" value="@Model.Id" />
            <input id="itemType" name="itemType" type="hidden" value="project" />
            <ul class="resume-ul">
                <li class="text ui-form-item">
                    <label for="project"><em>*</em>项目名称</label>
                    <div class="fieldgroup">
                        <input class="resume-text" id="project" maxlength="50" name="ProjectName" type="text" value="@Model.Project_name"/>
                        <span class="ui-form-explain"></span>
                    </div>
                </li>
                <li class="text ui-form-item">
                    <label for="position"><em>*</em>担任职务</label>
                    <div class="fieldgroup">
                        <input class="resume-text" id="position" maxlength="30" name="ProjectJobName" type="text" value="@Model.Project_job_name"/>
                        <span class="ui-form-explain"></span>
                    </div>
                </li>
                <li class="text ui-form-item">
                    <label><em>*</em>项目时间</label>
                    <div class="fieldgroup">
                        @{
                            var start_project_show = Model.Start_project > DateTime.MinValue ? Model.Start_project.ToString("yyyy.MM") : "";
                            var start_project = Model.Start_project > DateTime.MinValue ? Model.Start_project.ToString("yyyy/MM/dd") : "";

                            var end_project_show = Model.End_project > DateTime.MinValue ? Model.End_project.ToString("yyyy.MM") : "";
                            var end_project = Model.End_project > DateTime.MinValue ? Model.End_project.ToString("yyyy/MM/dd") : "";
                        }
                        <div class="ui-date-wrap ui-date-exp"><input class="resume-text ui-input-date" id="start-project" value="@start_project_show" readonly="" type="text"></input><input id="start-project-id" name="StartDate" value="@start_project" type="hidden"></input></div>
                        <em class="select-to">至</em>
                        <div class="ui-date-wrap ui-date-exp"><input class="resume-text ui-input-date" id="end-project" value="@end_project_show" readonly="" type="text"></input><input id="end-project-id" name="EndDate" value="@end_project" type="hidden"></input></div>
                        <span class="ui-form-explain"></span>
                    </div>
                </li>
                <li class="text ui-form-item">
                    <label>项目描述</label>
                    <div class="fieldgroup">
                        <textarea class="resume-area" cols="50" id="ProjectJobDesc" name="ProjectJobDesc" placeholder="简要描述项目内容，项目过程和项目结果（不超过400字）" rows="8">@Html.CreateHtmlForTextAreaText(Model.Project_job_desc)</textarea>
                    </div>
                </li>
            </ul>
            <p class="actions">
                <input type="button" id="submit-project" itemtype="project" class="J_Submit button-save hover-tran" value="保 存">
                <a itemtype="project" class="J_Cancel" href="javascript:;">取消</a>
            </p>
        </form>
    </div>
</div>
<script type="text/javascript">
    // 简历模块的js
    seajs.use(['validator', '$', 'selectui', 'zyb/datePicker/DatePicker'], function (Validator, $, selectui, DatePicker) {
        $(function () {

            window.projectValidator = validator = new Validator({
                element: '#form-project',
                failSilently: true,
                triggerType: false
            });

            //check 结束日期 是否 大于 开始日期
            Validator.addRule('checkEndDateResonable', function (options, commit) {
                var element = options.element;
                var numStart = parseInt($.trim($("#start-project").val()).split('.').join(''));
                var numEnd = parseInt($.trim($("#end-project").val()).split('.').join(''));
                var message = '';
                var valid = true;
                if (numStart > numEnd) {
                    //比较日期
                    valid = false;
                    message = "结束日期应大于开始日期";
                }
                commit(valid, message);
            });
            Validator.addRule('wordLimmit', function (options, commit) {
                var element = options.element;
                var val = element.val();
                var message = '';
                var valid = true;
                if (val != '' && val.length > 400) {
                    valid = false;
                    message = "描述内容限400字";
                }
                commit(valid, message);
            });
            validator.addItem({
                element: '#project',
                required: true
            })
            .addItem({
                element: '#position',
                required: true
            })
            .addItem({
                element: '[name=StartDate]',
                required: true,
                errormessageRequired: '请选择开始时间',
                rule: 'checkEndDateResonable'
            })
            .addItem({
                element: '[name=EndDate]',
                required: true,
                errormessageRequired: '请选择结束时间',
                showMessage: function (message, element) {
                    // 结束日期出错后会调用这个函数。如果前面的开始日期没有出错的时候才显示自己的出错消息。
                    var startErr = $.trim(this.getExplain(element).html());
                    if (!startErr) {
                        this.getExplain(element).html(message);
                        this.getItem(element).addClass(this.get('itemErrorClass'));
                    }
                },
                hideMessage: function (message, element) {
                    // 结束日期校验通过后会调用这个函数。如果前面的开始日期没有出错的时候才清空消息。
                    var startErr = $.trim(this.getExplain(element).html());
                    if (!startErr) {
                        this.getExplain(element).html(element.attr('data-explain') || ' ');
                        this.getItem(element).removeClass(this.get('itemErrorClass'));
                    }
                }
            })
            .addItem({
                element: '#ProjectJobDesc',
                rule: 'wordLimmit'
            })
            ;

            var nowYear = new Date().getFullYear();

            $("#start-project").datePick({
                hiddenField: '#start-project-id',
                startYear: nowYear - 10,
                defaultYear: nowYear,
                format: 'yyyy.mm.dd',
                disableDate: 1,
                //referDate: function () {
                //    return $('#start-project').val();
                //}
            });
            $("#end-project").datePick({
                hiddenField: '#end-project-id',
                startYear: nowYear - 10,
                defaultYear: nowYear,
                format: 'yyyy.mm.dd',
                disableDate: -1,
                //referDate: function () {
                //    return $('#end-project').val();
                //},
                endYearText: '至今'
            });

        });//end ready

    });//end seajs.use
</script>
